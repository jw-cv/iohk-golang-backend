package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.54

import (
	"context"
	"iohk-golang-backend-preprod/graph/model"
)

// Query Resolvers

func (r *queryResolver) Customer(ctx context.Context, id string) (*model.Customer, error) {
	return r.customerService.GetCustomer(ctx, id)
}

func (r *queryResolver) Customers(ctx context.Context) ([]*model.Customer, error) {
	return r.customerService.GetAllCustomers(ctx)
}

// Mutation Resolvers

func (r *mutationResolver) CreateCustomer(ctx context.Context, input model.CreateCustomerInput) (*model.Customer, error) {
	return r.customerService.CreateCustomer(ctx, input)
}

func (r *mutationResolver) UpdateCustomer(ctx context.Context, id string, input model.UpdateCustomerInput) (*model.Customer, error) {
	return r.customerService.UpdateCustomer(ctx, id, input)
}

func (r *mutationResolver) DeleteCustomer(ctx context.Context, id string) (bool, error) {
	return r.customerService.DeleteCustomer(ctx, id)
}

// Resolver type assertions
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }
func (r *Resolver) Query() QueryResolver       { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
