# Define a custom scalar for Date
scalar Date

# Enum for Gender to ensure only valid values are used
enum Gender {
  MALE
  FEMALE
}

# Input type for creating a new customer
input CreateCustomerInput {
  name: String!
  surname: String!
  number: Int!
  gender: Gender!
  country: String!
  dependants: Int!
  birthDate: Date!
}

# Input type for updating an existing customer
input UpdateCustomerInput {
  name: String
  surname: String
  number: Int
  gender: Gender
  country: String
  dependants: Int
  birthDate: Date
}

# Define the Customer type
type Customer {
    id: ID!
    name: String!
    surname: String!
    number: Int!
    gender: Gender!
    country: String!
    dependants: Int!
    birthDate: Date!
}

# Define the Query type for fetching customers
type Query {
    customer(id: ID!): Customer
    customers: [Customer!]!
}

# Define the Mutation type for creating, updating, and deleting customers
type Mutation {
    createCustomer(input: CreateCustomerInput!): Customer!
    updateCustomer(id: ID!, input: UpdateCustomerInput!): Customer!
    deleteCustomer(id: ID!): Boolean!
}